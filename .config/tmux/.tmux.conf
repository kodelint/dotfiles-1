# Copyright © 2016 zchee aka Koichi Shiraishi
#
# tmux configure files
# Variables sort order by tmux man page
#
# -----------------------------------------------------------------------------
# Server setting option {{{

# -s flag is server option
#
# Valid server options:
#   buffer-limit
#   escape-time
#   exit-unattached
#   focus-events
#   message-limit
#   quiet
#   set-clipboard
#   terminar-overrides

# escape-time is !! DO NOT CHANGE !! from 1
# neovim(libtermkey) on tmux problem.
# See https://github.com/neovim/neovim/issues/3092
set -sg buffer-limit 1000000
set -sg escape-time 2
set -sg focus-events on
set -sg history-file "${HOME}/.history/tmux_history"
set -sg set-clipboard on
# set -ga terminal-overrides ',xterm*:Cs:Cr:Ss:Se:Tc,*:Ss=\E[%p1%d q:Se=\E[2 q'
set -ga terminal-overrides ',xterm*:XT:Tc:Ss=\E[%p1%d q:Se=\E[2 q:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50'

# }}}
# -----------------------------------------------------------------------------
# Session setting options {{{

# Disable assume-paste-time, so that iTerm2's "Send Hex Codes" feature works
# with tmux 2.1. This is backwards-compatible with earlier versions of tmux,
# AFAICT.
set -g assume-paste-time 0
set -g base-index 1
# set -g default-command "reattach-to-user-namespace -l zsh"
set -g default-command 'zsh'
set -g default-shell "/usr/local/bin/zsh"
set -g default-terminal "screen-256color"
# set -g default-terminal "xterm-256color"
# shown by the display-panes command appear
set -g display-panes-time 50
# status line messages and other on-screen indicators are displayed
set -g display-time 200
set -g history-limit 20000
set -g mouse on
# Allow the arrow key to be used immediately after changing windows
set -g repeat-time 0
set -g set-titles off

# Fix to allow mousewheel/trackpad scrolling in tmux 2.1
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M; send-keys -M; send-keys -M; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M; send-keys -M; send-keys -M; send-keys -M"

set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set -g word-separators " -_@'/\n"

# }}}
# -----------------------------------------------------------------------------
# window options {{{

setw -g aggressive-resize on
setw -g allow-rename on
setw -g alternate-screen on
setw -g automatic-rename off
setw -g force-height 0
setw -g force-width 0
setw -g main-pane-height 24
setw -g main-pane-width 80
setw -g mode-keys vi
setw -g monitor-activity on
setw -g monitor-silence 0
setw -g other-pane-height 0
setw -g other-pane-width 0
setw -g pane-base-index 1
setw -g pane-border-style default
setw -g remain-on-exit off

setw -g wrap-search on
setw -g xterm-keys on

# }}}
# -----------------------------------------------------------------------------
# Status line {{{

set -g status on
set -g status-interval 1
set -g status-justify centre

set -g status-keys emacs

set -g pane-border-fg white
set -g pane-border-bg black

set -g message-fg colour255
set -g message-bg blue
set -g message-attr default

set -g message-command-fg yellow
set -g message-command-bg black
set -g message-command-attr default

# set -g status-text '#[fg=green,bold,bg=default]#(/usr/local/bin/tmux-mem-cpu-load) '
# set -g status-text-justify right

set -g display-panes-active-colour red
set -g display-panes-colour blue


setw -g mode-style 'fg=black,bold,bg=yellow'

setw -g pane-active-border-fg blue
setw -g pane-active-border-bg black

# setw -g window-status-bell-style reverse

# Window style
setw -g window-style 'fg=default,bg=default'

# Default statusline format
# Window Separator powerline marker:    
setw -g window-status-separator ' '
# Default statusline style. but use window-status-separator
# set -g status-fg colour238
# set -g status-bg colour235
# set -g status-attr default
set -g status-fg colour238
set -g status-bg colour235
set -g status-attr default

setw -g window-status-fg default
setw -g window-status-bg default
setw -g window-status-format "#[fg=colour248,bg=colour235] #{window_index}: #{window_name} "
# setw -g window-status-style 'fg=colour238,bold,bg=colour246'
setw -ag window-status-last-style 'fg=colour246,bg=colour238'
setw -g window-status-current-format "#[fg=colour238,bg=colour235]#[fg=cyan,bold,bg=default]#{window_flags} #[fg=colour255,bg=default]#{window_index}: #{window_name} #[fg=colour238,bg=colour235]"
setw -g window-status-current-fg colour255
setw -g window-status-current-bg colour238
setw -g window-status-current-attr default

setw -g window-status-activity-style 'fg=colour255,bg=colour238'


# Visualize prefix key: separators: » ▶ « ◀
set -g status-left "#{?client_prefix,#[bg=blue]#[fg=colour254],#[bg=colour241]#[fg=colour015]} #S "
#[fg=white,bg=default] : #[fg=green,bold,bg=default]#(tmux-mem-cpu-load)"
set -g status-left-length 50

set -g status-position bottom

# set -g status-right "#{=21:pane_title}' %H:%M %d-%b-%y' "
# set -g status-right '#[fg=white,bg=default] : #[fg=cyan,bold,bg=default]%H:%M %d-%b-%Y '
set -g status-right "#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=white,bg=default] : #[fg=red,dim,bg=default] uptime #(uptime | cut -f 1 -d "," | awk '{print $3$4}') #[fg=white,none,bg=default] : #[fg=cyan,bold,bg=default]%H:%M %d-%b-%Y "
# set -g status-right "#[fg=white,bg=default,bright] : #[fg=red,dim,bg=default] uptime #(uptime | cut -f 1 -d "," | awk '{print $3$4}') #[fg=white,none,bg=default] : #[fg=cyan,bold,bg=default]%H:%M %d-%b-%Y "
# set -g status-right '#[fg=white,bold,bg=default]%H:%M #[fg=magenta]: #[fg=white,bold,bg=default]%a %d-%b-%Y '
#[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
set -g status-right-length 450
set -g status-right-style default

# }}}
# -----------------------------------------------------------------------------
# Environment variables {{{

# Ignore C-d logout
# set-environment -g 'IGNOREEOF' 2

# }}}
# -----------------------------------------------------------------------------
# Key binding {{{
#
#  -T  -- specify key table for the binding
#  -c  -- bind to command mode instead of normal mode
#  -n  -- make the binding work without the need for the prefix key
#  -r  -- the key may repeat
#  -t  -- specify mode table for the binding
#

set -g prefix C-b

unbind t # Disable clock mode
unbind '"' # unbind horizontal split-window
unbind % # unbind vertical split-window
unbind q
unbind C-z # unbind suspend tmux

bind-key -n C-v send C-v
bind-key -n C-@ send C-@

bind-key -    split-window -v # intelligible vertical split-window key bind
bind-key \    split-window -h # Standard split-window
bind-key _    split-window -v -d -p 70
bind-key g    command-prompt "split-window -d -v -p 15 'exec go get -u -v -x %%'" # Dispatch like go get -u -v. Auto close after finished
bind-key h    command-prompt "split-window -d -v -p 15 'exec ghq get -u %%'" # Dispatch like ghq get -u. Auto close after finished
bind-key h    new-window -n 'htop' "sudo htop"
bind-key i    display-message
bind-key k    command-prompt "send-keys -t 2 '%%' Enter" # send shell command for side pane
bind-key m    command-prompt "new-window 'exec jman %%'"  # fast access man page
bind-key O    select-pane -t :.-
bind-key r    source-file ~/.tmux.conf \; display ".tmux.conf reloaded." # Reload .tmux.conf
bind-key t    previous-window # bind previous-window
bind-key T    swap-window -t 1
bind-key v    copy-mode # Copy mode key bindings
bind-key |    split-window -h -p 70 # Sub terminal window split size to 30%

bind-key C-_         split-window -v -d -b -p 30
bind-key C-b         send-prefix
bind-key C-c         run-shell 'tmux save-buffer - | reattach-to-user-namespace pbcopy'
bind-key C-q         confirm-before 'kill-session' # kill-session

bind-key -r C-Down   resize-pane -D 10
bind-key -r C-Left   resize-pane -L 10
bind-key -r C-Right  resize-pane -R 10
bind-key -r C-Up     resize-pane -U 10

bind-key -t vi-copy @ back-to-indentation
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t vi-copy v begin-selection

# }}}
# -----------------------------------------------------------------------------

# tmux-plugins {{{

# set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins'

# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-yank'
# run '~/.config/tmux/plugins/tpm/tpm'

# }}}
# -----------------------------------------------------------------------------

# Default bind-key list {{{

# bind-key    -T prefix $                command-prompt -I #S "rename-session '%%'"
# bind-key    -T prefix %                split-window -h
# bind-key    -T prefix &                confirm-before -p "kill-window #W? (y/n)" kill-window
# bind-key    -T prefix '                command-prompt -p index "select-window -t ':%%'"
# bind-key    -T prefix (                switch-client -p
# bind-key    -T prefix )                switch-client -n
# bind-key    -T prefix ,                command-prompt -I #W "rename-window '%%'"
# bind-key    -T prefix -                delete-buffer
# bind-key    -T prefix .                command-prompt "move-window -t '%%'"
# bind-key    -T prefix 0                select-window -t :=0
# bind-key    -T prefix 1                select-window -t :=1
# bind-key    -T prefix 2                select-window -t :=2
# bind-key    -T prefix 3                select-window -t :=3
# bind-key    -T prefix 4                select-window -t :=4
# bind-key    -T prefix 5                select-window -t :=5
# bind-key    -T prefix 6                select-window -t :=6
# bind-key    -T prefix 7                select-window -t :=7
# bind-key    -T prefix 8                select-window -t :=8
# bind-key    -T prefix 9                select-window -t :=9
# bind-key    -T prefix :                command-prompt
# bind-key    -T prefix ;                last-pane
# bind-key    -T prefix =                choose-buffer
# bind-key    -T prefix ?                list-keys
# bind-key    -T prefix D                choose-client
# bind-key    -T prefix L                switch-client -l
# bind-key    -T prefix M                select-pane -M
# bind-key    -T prefix [                copy-mode
# bind-key    -T prefix ]                paste-buffer
# bind-key    -T prefix c                new-window
# bind-key    -T prefix d                detach-client
# bind-key    -T prefix f                command-prompt "find-window '%%'"
# bind-key    -T prefix i                display-message
# bind-key    -T prefix l                last-window
# bind-key    -T prefix m                select-pane -m
# bind-key    -T prefix n                next-window
# bind-key    -T prefix o                select-pane -t :.+
# bind-key    -T prefix p                previous-window
# bind-key    -T prefix q                display-panes
# bind-key    -T prefix r                refresh-client
# bind-key    -T prefix s                choose-tree
# bind-key    -T prefix t                clock-mode
# bind-key    -T prefix w                choose-window
# bind-key    -T prefix x                confirm-before -p "kill-pane #P? (y/n)" kill-pane
# bind-key    -T prefix z                resize-pane -Z
# bind-key    -T prefix {                swap-pane -U
# bind-key    -T prefix }                swap-pane -D
# bind-key    -T prefix ~                show-messages
# bind-key    -T prefix PPage            copy-mode -u
# bind-key -r -T prefix Up               select-pane -U
# bind-key -r -T prefix Down             select-pane -D
# bind-key -r -T prefix Left             select-pane -L
# bind-key -r -T prefix Right            select-pane -R
# bind-key    -T prefix M-1              select-layout even-horizontal
# bind-key    -T prefix M-2              select-layout even-vertical
# bind-key    -T prefix M-3              select-layout main-horizontal
# bind-key    -T prefix M-4              select-layout main-vertical
# bind-key    -T prefix M-5              select-layout tiled
# bind-key    -T prefix M-n              next-window -a
# bind-key    -T prefix M-o              rotate-window -D
# bind-key    -T prefix M-p              previous-window -a
# bind-key -r -T prefix M-Up             resize-pane -U 5
# bind-key -r -T prefix M-Down           resize-pane -D 5
# bind-key -r -T prefix M-Left           resize-pane -L 5
# bind-key -r -T prefix M-Right          resize-pane -R 5
# bind-key -r -T prefix C-Up             resize-pane -U
# bind-key -r -T prefix C-Down           resize-pane -D
# bind-key -r -T prefix C-Left           resize-pane -L
# bind-key -r -T prefix C-Right          resize-pane -R
# bind-key    -T root   MouseDown1Pane   select-pane -t = ; send-keys -M
# bind-key    -T root   MouseDown1Status select-window -t =
# bind-key    -T root   MouseDown3Pane   if-shell -F -t = #{mouse_any_flag} "select-pane -t=; send-keys -M" "select-pane -mt="
# bind-key    -T root   MouseDrag1Pane   if-shell -F -t = #{mouse_any_flag} "if -Ft= "#{pane_in_mode}" "copy-mode -M" "send-keys -M"" "copy-mode -M"
# bind-key    -T root   MouseDrag1Border resize-pane -M
# bind-key    -T root   WheelUpPane      if-shell -F -t = #{mouse_any_flag} "send-keys -M" "if -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -et=""
# bind-key    -T root   WheelUpStatus    previous-window
# bind-key    -T root   WheelDownStatus  next-window

# -----------------------------------------------------------------------------

# vi-copy bind-key list {{{

# bind-key -t vi-copy               C-b page-up
# bind-key -t vi-copy               C-c cancel
# bind-key -t vi-copy               C-d halfpage-down
# bind-key -t vi-copy               C-e scroll-down
# bind-key -t vi-copy               C-f page-down
# bind-key -t vi-copy               C-h cursor-left
# bind-key -t vi-copy               C-j copy-selection
# bind-key -t vi-copy             Enter copy-selection
# bind-key -t vi-copy               C-u halfpage-up
# bind-key -t vi-copy               C-y scroll-up
# bind-key -t vi-copy            Escape clear-selection
# bind-key -t vi-copy             Space begin-selection
# bind-key -t vi-copy                 ! copy-pipe "tr -d '\n' | reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy                 " start-named-buffer
# bind-key -t vi-copy                 $ end-of-line
# bind-key -t vi-copy                 , jump-reverse
# bind-key -t vi-copy                 / search-forward
# bind-key -t vi-copy                 0 start-of-line
# bind-key -t vi-copy                 1 start-number-prefix
# bind-key -t vi-copy                 2 start-number-prefix
# bind-key -t vi-copy                 3 start-number-prefix
# bind-key -t vi-copy                 4 start-number-prefix
# bind-key -t vi-copy                 5 start-number-prefix
# bind-key -t vi-copy                 6 start-number-prefix
# bind-key -t vi-copy                 7 start-number-prefix
# bind-key -t vi-copy                 8 start-number-prefix
# bind-key -t vi-copy                 9 start-number-prefix
# bind-key -t vi-copy                 : goto-line
# bind-key -t vi-copy                 ; jump-again
# bind-key -t vi-copy                 ? search-backward
# bind-key -t vi-copy                 A append-selection
# bind-key -t vi-copy                 B previous-space
# bind-key -t vi-copy                 D copy-end-of-line
# bind-key -t vi-copy                 E next-space-end
# bind-key -t vi-copy                 F jump-backward
# bind-key -t vi-copy                 G history-bottom
# bind-key -t vi-copy                 H top-line
# bind-key -t vi-copy                 J scroll-down
# bind-key -t vi-copy                 K scroll-up
# bind-key -t vi-copy                 L bottom-line
# bind-key -t vi-copy                 M middle-line
# bind-key -t vi-copy                 N search-reverse
# bind-key -t vi-copy                 T jump-to-backward
# bind-key -t vi-copy                 V select-line
# bind-key -t vi-copy                 W next-space
# bind-key -t vi-copy                 Y copy-pipe "tmux paste-buffer"
# bind-key -t vi-copy                 ^ back-to-indentation
# bind-key -t vi-copy                 b previous-word
# bind-key -t vi-copy                 e next-word-end
# bind-key -t vi-copy                 f jump-forward
# bind-key -t vi-copy                 g history-top
# bind-key -t vi-copy                 h cursor-left
# bind-key -t vi-copy                 j cursor-down
# bind-key -t vi-copy                 k cursor-up
# bind-key -t vi-copy                 l cursor-right
# bind-key -t vi-copy                 n search-again
# bind-key -t vi-copy                 o other-end
# bind-key -t vi-copy                 q cancel
# bind-key -t vi-copy                 t jump-to-forward
# bind-key -t vi-copy                 v rectangle-toggle
# bind-key -t vi-copy                 w next-word
# bind-key -t vi-copy                 y copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy                 { previous-paragraph
# bind-key -t vi-copy                 } next-paragraph
# bind-key -t vi-copy    MouseDrag1Pane begin-selection
# bind-key -t vi-copy MouseDragEnd1Pane copy-selection
# bind-key -t vi-copy       WheelUpPane scroll-up
# bind-key -t vi-copy     WheelDownPane scroll-down
# bind-key -t vi-copy            BSpace cursor-left
# bind-key -t vi-copy             NPage page-down
# bind-key -t vi-copy             PPage page-up
# bind-key -t vi-copy                Up cursor-up
# bind-key -t vi-copy              Down cursor-down
# bind-key -t vi-copy              Left cursor-left
# bind-key -t vi-copy             Right cursor-right
# bind-key -t vi-copy               M-y copy-pipe "reattach-to-user-namespace pbcopy; tmux paste-buffer"
# bind-key -t vi-copy              C-Up scroll-up
# bind-key -t vi-copy            C-Down scroll-down

# }}}
# -----------------------------------------------------------------------------
# vim:ft=tmux:cc=79
